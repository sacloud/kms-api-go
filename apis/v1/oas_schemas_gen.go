// Code generated by ogen, DO NOT EDIT.

package v1

import (
	"github.com/go-faster/errors"
)

type BasicAuth struct {
	Username string
	Password string
	Roles    []string
}

// GetUsername returns the value of Username.
func (s *BasicAuth) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *BasicAuth) GetPassword() string {
	return s.Password
}

// GetRoles returns the value of Roles.
func (s *BasicAuth) GetRoles() []string {
	return s.Roles
}

// SetUsername sets the value of Username.
func (s *BasicAuth) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *BasicAuth) SetPassword(val string) {
	s.Password = val
}

// SetRoles sets the value of Roles.
func (s *BasicAuth) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/CreateKey
type CreateKey struct {
	ID          string        `json:"ID"`
	CreatedAt   DateTime      `json:"CreatedAt"`
	ModifiedAt  DateTime      `json:"ModifiedAt"`
	Name        string        `json:"Name"`
	Description OptString     `json:"Description"`
	KeyOrigin   KeyOriginEnum `json:"KeyOrigin"`
	Tags        []string      `json:"Tags"`
	PlainKey    OptString     `json:"PlainKey"`
}

// GetID returns the value of ID.
func (s *CreateKey) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateKey) GetCreatedAt() DateTime {
	return s.CreatedAt
}

// GetModifiedAt returns the value of ModifiedAt.
func (s *CreateKey) GetModifiedAt() DateTime {
	return s.ModifiedAt
}

// GetName returns the value of Name.
func (s *CreateKey) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateKey) GetDescription() OptString {
	return s.Description
}

// GetKeyOrigin returns the value of KeyOrigin.
func (s *CreateKey) GetKeyOrigin() KeyOriginEnum {
	return s.KeyOrigin
}

// GetTags returns the value of Tags.
func (s *CreateKey) GetTags() []string {
	return s.Tags
}

// GetPlainKey returns the value of PlainKey.
func (s *CreateKey) GetPlainKey() OptString {
	return s.PlainKey
}

// SetID sets the value of ID.
func (s *CreateKey) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateKey) SetCreatedAt(val DateTime) {
	s.CreatedAt = val
}

// SetModifiedAt sets the value of ModifiedAt.
func (s *CreateKey) SetModifiedAt(val DateTime) {
	s.ModifiedAt = val
}

// SetName sets the value of Name.
func (s *CreateKey) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateKey) SetDescription(val OptString) {
	s.Description = val
}

// SetKeyOrigin sets the value of KeyOrigin.
func (s *CreateKey) SetKeyOrigin(val KeyOriginEnum) {
	s.KeyOrigin = val
}

// SetTags sets the value of Tags.
func (s *CreateKey) SetTags(val []string) {
	s.Tags = val
}

// SetPlainKey sets the value of PlainKey.
func (s *CreateKey) SetPlainKey(val OptString) {
	s.PlainKey = val
}

type DateTime string

// Ref: #/components/schemas/Key
type Key struct {
	ID          string        `json:"ID"`
	CreatedAt   DateTime      `json:"CreatedAt"`
	ModifiedAt  DateTime      `json:"ModifiedAt"`
	Name        string        `json:"Name"`
	Description OptString     `json:"Description"`
	KeyOrigin   KeyOriginEnum `json:"KeyOrigin"`
	Tags        []string      `json:"Tags"`
}

// GetID returns the value of ID.
func (s *Key) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Key) GetCreatedAt() DateTime {
	return s.CreatedAt
}

// GetModifiedAt returns the value of ModifiedAt.
func (s *Key) GetModifiedAt() DateTime {
	return s.ModifiedAt
}

// GetName returns the value of Name.
func (s *Key) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Key) GetDescription() OptString {
	return s.Description
}

// GetKeyOrigin returns the value of KeyOrigin.
func (s *Key) GetKeyOrigin() KeyOriginEnum {
	return s.KeyOrigin
}

// GetTags returns the value of Tags.
func (s *Key) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *Key) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Key) SetCreatedAt(val DateTime) {
	s.CreatedAt = val
}

// SetModifiedAt sets the value of ModifiedAt.
func (s *Key) SetModifiedAt(val DateTime) {
	s.ModifiedAt = val
}

// SetName sets the value of Name.
func (s *Key) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Key) SetDescription(val OptString) {
	s.Description = val
}

// SetKeyOrigin sets the value of KeyOrigin.
func (s *Key) SetKeyOrigin(val KeyOriginEnum) {
	s.KeyOrigin = val
}

// SetTags sets the value of Tags.
func (s *Key) SetTags(val []string) {
	s.Tags = val
}

type Keys []Key

// * `generated` - 生成
// * `imported` - インポート.
// Ref: #/components/schemas/KeyOriginEnum
type KeyOriginEnum string

const (
	KeyOriginEnumGenerated KeyOriginEnum = "generated"
	KeyOriginEnumImported  KeyOriginEnum = "imported"
)

// AllValues returns all KeyOriginEnum values.
func (KeyOriginEnum) AllValues() []KeyOriginEnum {
	return []KeyOriginEnum{
		KeyOriginEnumGenerated,
		KeyOriginEnumImported,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s KeyOriginEnum) MarshalText() ([]byte, error) {
	switch s {
	case KeyOriginEnumGenerated:
		return []byte(s), nil
	case KeyOriginEnumImported:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *KeyOriginEnum) UnmarshalText(data []byte) error {
	switch KeyOriginEnum(data) {
	case KeyOriginEnumGenerated:
		*s = KeyOriginEnumGenerated
		return nil
	case KeyOriginEnumImported:
		*s = KeyOriginEnumImported
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// KmsKeysDestroyNoContent is response for KmsKeysDestroy operation.
type KmsKeysDestroyNoContent struct{}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PaginatedKeyList
type PaginatedKeyList struct {
	Count int    `json:"Count"`
	From  OptInt `json:"From"`
	Total OptInt `json:"Total"`
	Keys  []Key  `json:"Keys"`
}

// GetCount returns the value of Count.
func (s *PaginatedKeyList) GetCount() int {
	return s.Count
}

// GetFrom returns the value of From.
func (s *PaginatedKeyList) GetFrom() OptInt {
	return s.From
}

// GetTotal returns the value of Total.
func (s *PaginatedKeyList) GetTotal() OptInt {
	return s.Total
}

// GetKeys returns the value of Keys.
func (s *PaginatedKeyList) GetKeys() []Key {
	return s.Keys
}

// SetCount sets the value of Count.
func (s *PaginatedKeyList) SetCount(val int) {
	s.Count = val
}

// SetFrom sets the value of From.
func (s *PaginatedKeyList) SetFrom(val OptInt) {
	s.From = val
}

// SetTotal sets the value of Total.
func (s *PaginatedKeyList) SetTotal(val OptInt) {
	s.Total = val
}

// SetKeys sets the value of Keys.
func (s *PaginatedKeyList) SetKeys(val []Key) {
	s.Keys = val
}

// Ref: #/components/schemas/WrappedCreateKey
type WrappedCreateKey struct {
	Key CreateKey `json:"Key"`
}

// GetKey returns the value of Key.
func (s *WrappedCreateKey) GetKey() CreateKey {
	return s.Key
}

// SetKey sets the value of Key.
func (s *WrappedCreateKey) SetKey(val CreateKey) {
	s.Key = val
}

// Ref: #/components/schemas/WrappedKey
type WrappedKey struct {
	Key Key `json:"Key"`
}

// GetKey returns the value of Key.
func (s *WrappedKey) GetKey() Key {
	return s.Key
}

// SetKey sets the value of Key.
func (s *WrappedKey) SetKey(val Key) {
	s.Key = val
}
