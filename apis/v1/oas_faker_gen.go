// Code generated by ogen, DO NOT EDIT.

package v1

// SetFake set fake values.
func (s *CreateKey) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.ModifiedAt.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.KeyOrigin.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
	{
		{
			s.PlainKey.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DateTime) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = DateTime(unwrapped)
}

// SetFake set fake values.
func (s *Key) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.ModifiedAt.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.KeyOrigin.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *KeyOriginEnum) SetFake() {
	*s = KeyOriginEnumGenerated
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *PaginatedKeyList) SetFake() {
	{
		{
			s.Count = int(0)
		}
	}
	{
		{
			s.From.SetFake()
		}
	}
	{
		{
			s.Total.SetFake()
		}
	}
	{
		{
			s.Keys = nil
			for i := 0; i < 0; i++ {
				var elem Key
				{
					elem.SetFake()
				}
				s.Keys = append(s.Keys, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *WrappedCreateKey) SetFake() {
	{
		{
			s.Key.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedKey) SetFake() {
	{
		{
			s.Key.SetFake()
		}
	}
}
